{"version":3,"sources":["pages/App/model/actions.js","pages/App/model/reducers.js","common/redux/reducers.js","common/services/env.config.js","common/services/index.js","common/utils/token.js","common/utils/uuid.js","common/utils/env.js","common/utils/navigateToMiniProgram.js","common/utils/login.js","pages/App/model/effects.js","common/redux/sagas.js","common/redux/index.js","common/redux/lazyRedux.js","pages/Home/model/actions.js","pages/Home/model/reducers.js","pages/Home/model/effects.js","pages/Home/index.js","pages/Member/model/actions.js","pages/Member/model/reducers.js","pages/Member/model/effects.js","pages/Member/index.js","common/router/index.js","common/router/routes.js","common/components/Loading.js","pages/App/index.js","index.js"],"names":["INIT_APP","INIT_APP_DONE","SAVE_PRELOAD","LOGIN","LOGIN_SUCCESS","NEED_LOGIN","RECEIVE_USER_INFO","PUT_MESSAGE","SHOW_MESSAGE","HIDE_MESSAGE","SHOW_MODAL","HIDE_MODAL","SHOW_LOADING","HIDE_LOADING","PUT_MODAL_MESSAGE","login","fingerPrint","type","loginSuccess","token","needLogin","force","showMessage","msg","res","showModal","initialState","init","userInfo","showToast","showModalEl","showLoading","modalMsg","preload","showModalToast","bannerConfigMap","selectAppInit","app","reducers","state","action","globalAction","toastMsg","api","ajax","axios","create","interceptors","request","use","config","url","data","headers","method","params","store","getState","sk","baseURL","includes","test","temp","i","push","encodeURI","join","response","status","error","console","log","code","getFingerPrint","fp","cookie","get","s","hexDigits","substr","Math","floor","random","uuid","set","expires","navigator","window","e","isHuaZhuApp","userAgent","ETone","isWeixin","isMiniProgramPromise","Promise","resolve","reject","wx","miniProgram","getEnv","miniprogram","__wxjs_environment","toLowerCase","navigateToMiniProgram","param","redirect","some","switchTab","redirectTo","navigateTo","alert","navigateToMiniProgramWebview","link","encodeURIComponent","arg","loginUrl","loginAction","query","to","location","href","then","is","main","checkAppInit","initApp","watchRegister","watchNeedLogin","watchLogin","watchPutMessage","watchPutModalMessage","appSaga","take","call","select","put","all","fork","actionChannel","buffers","sliding","chan","delay","callback","key","time","re","rj","setTimeout","syncSagas","sagaMiddleware","createSagaMiddleware","middleware","enhancers","devToolsEnhancer","getNewStore","newStore","createStore","combineReducers","syncReducers","compose","applyMiddleware","rootSage","run","rootSagas","sagas","Object","values","saga","spawn","closeSaga","dispatch","END","asyncReducers","asyncSagas","addReducer","reducer","replace","hasOwnProperty","newReducer","replaceReducer","addSaga","Redux","children","restart","withLazyRedux","dependence","WrappedComponent","ComponentWithLazyRedux","props","display","entries","length","Error","forEach","index","value","this","Component","displayName","name","getDisplayName","hoistNonReactStatic","ROUTE_HOME","INIT_HOME_DONE","selectHomeInit","home","checkHomeInit","initHome","loadHome","homeSaga","mapDispatch","routeHome","Home","lazyRedux","actions","connect","className","Helmet","PureComponent","ROUTE_MEMBER","INIT_MEMBER_DONE","selectMemberInit","member","checkMemberInit","initMember","loadMember","memberSaga","history","routeMember","routes","component","exact","routeTree","RouteList","base","Reflect","ownKeys","map","routePath","subRoutes","path","Router","mode","Root","React","isValidElement","cloneElement","initPathname","pathname","list","listen","pop","reLaunch","shouldBlack","go","enhancerHistory","createMemoryHistory","initialEntries","createBrowserHistory","createHashHistory","Loading","defaultDelay","ComponentWidthDelay","show","timer","setState","clearTimeout","widthDelayComponent","hideModal","App","withRouter","ShowModalToast","showNavBar","indexOf","onClick","split","renderToast","renderModal","renderNavbar","render","document","getElementById"],"mappings":"6PAAaA,EAAW,aACXC,EAAgB,kBAChBC,EAAe,eACfC,EAAQ,QACRC,EAAgB,gBAChBC,EAAa,aAEbC,EAAoB,oBAEpBC,EAAc,cACdC,EAAe,eACfC,EAAe,eACfC,EAAa,aACbC,EAAa,aACbC,EAAe,eACfC,EAAe,eACfC,EAAoB,oBAyB1B,SAASC,EAAMC,GAClB,MAAO,CACHC,KAAMd,EACNa,eAKD,SAASE,EAAaC,EAAOH,GAChC,MAAO,CACHC,KAAMb,EACNY,cACAG,SAKD,SAASC,EAAUC,GACtB,MAAO,CACHJ,KAAMZ,EACNgB,SAsCD,SAASC,EAAYC,EAAKC,GAC7B,MAAO,CACHP,KAAMT,EACNe,MACAC,OAYD,SAASC,EAAUF,GACtB,MAAO,CACHN,KAAMP,EACNa,OCnHR,IAAMG,EAAe,CACjBC,MAAM,EACNC,SAAU,GACVT,MAAO,GACPH,YAAa,GACba,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,SAAU,GACVC,QAAS,GACTC,gBAAgB,EAChBC,gBAAiB,IAmEd,SAASC,EAAT,GACH,OADyC,EAAdC,IAAMV,KC7E9B,IAAMW,EAAW,CACpBD,IDcW,WAAiD,IAA/BE,EAA8B,uDAAtBb,EAAcc,EAAQ,uCAC3D,OAAQA,EAAOvB,MACX,KAAKwB,EACD,OAAO,2BACAF,GADP,IAEIZ,MAAM,IAEd,KAAKc,EACD,OAAO,2BACAF,GADP,IAEIN,QAASO,EAAOP,UAExB,KAAKQ,EACD,OAAO,2BACAF,GADP,IAEIvB,YAAawB,EAAOxB,YACpBG,MAAOqB,EAAOrB,QAEtB,KAAKsB,EACD,OAAO,eACAF,GAGX,KAAKE,EACD,OAAO,2BACAF,GADP,IAEIV,WAAW,EACXa,SAAUF,EAAOjB,MAEzB,KAAKkB,EACD,OAAO,2BACAF,GADP,IAEIV,WAAW,IAEnB,KAAKY,EACD,OAAO,2BACAF,GADP,IAEIR,aAAa,IAErB,KAAKU,EACD,OAAO,2BACAF,GADP,IAEIR,aAAa,IAErB,KAAKU,EACD,OAAO,2BACAF,GADP,IAEIP,SAAUQ,EAAOjB,IACjBO,aAAa,IAErB,KAAKW,EACD,OAAO,2BACAF,GADP,IAEIT,aAAa,IAErB,QACI,OAAOS,K,uCEtENI,EAJJ,iCCMIC,E,OAAOC,EAAMC,SAG1BF,EAAKG,aAAaC,QAAQC,KAAI,SAACC,GAAY,IAClCC,EAAsCD,EAAtCC,IAAKC,EAAiCF,EAAjCE,KAAMC,EAA2BH,EAA3BG,QAASC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,OAC1BpC,EAAUqC,GAAMC,WAAWpB,IAA3BlB,MAGPiC,EAAOA,EAAKM,GAAKvC,EAAQiC,EAAO,CAACM,GAAIvC,GAIrC,IAAIwC,EAAO,UAAMhB,EAAN,KASX,GARIQ,EAAIS,SAAS,UACbD,EAAU,IAEV,MAAME,KAAKV,KACXQ,EAAUhB,EAAM,mBAIfU,EAAQ,gBAGT,GAFAA,EAAQ,gBAAkB,oCAEX,SAAXC,EAAmB,CACnB,IAAIQ,EAAO,GACX,IAAK,IAAIC,KAAKX,EACVU,EAAKE,KAAKD,EAAI,IAAME,UAAUb,EAAKW,KAEvCX,EAAOU,EAAKI,KAAK,UAEjBX,EAASA,EAAM,2BAAOH,GAASG,GAAUH,EAKjD,OAAO,2BACAF,GADP,IAEIE,OACAG,SACAF,UACAM,eAKRf,EAAKG,aAAaoB,SAASlB,KACvB,SAACzB,GAAS,IACC4C,EAAgB5C,EAAhB4C,OAAQhB,EAAQ5B,EAAR4B,KAEf,GAAe,MAAXgB,EAAgB,OAAOhB,KAE/B,SAACiB,GAIG,OAFAC,QAAQC,IAAI,4BAASF,GAEd,CACHG,KAAM,Q,6BCpCX,SAASC,IAEZ,IAAIC,EAAKC,IAAOC,IAAI,MASpB,OAPIF,IACAA,EC/BO,WAGX,IAFA,IAAIG,EAAI,GACJC,EAAY,mBACPf,EAAI,EAAGA,EAAI,GAAIA,IACpBc,EAAEd,GAAKe,EAAUC,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAkB,GAM9D,OAJAL,EAAE,IAAM,IACRA,EAAE,IAAMC,EAAUC,OAAgB,EAARF,EAAE,IAAa,EAAK,GAC9CA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAM,IAExBA,EAAEX,KAAK,IDqBLiB,GACLR,IAAOS,IAAI,KAAKV,EAAI,CAChBW,QAAS,QAIVX,EEvCJ,IAKHY,EAEJ,IACIA,EAAYC,OAAOD,UACrB,MAAOE,IACLF,EAAY,GAET,IAAMG,EAAc,UAAU5B,KAAKyB,EAAUI,aAAeH,OAAOI,MAK7DC,GAJQ,wBAAwB/B,KAAKyB,EAAUI,WAEnC,WAAW7B,KAAKyB,EAAUI,WAE3B,kBAAkB7B,KAAKyB,EAAUI,YAG5CG,EAAuB,IAAIC,SAAQ,SAACC,EAASC,GACtD,IACeT,OAAOU,GACfC,YAAYC,QAAO,SAAC3E,GACnBuE,EAAQvE,EAAI4E,gBAElB,MAAOZ,SAiBmD,gBAA9BD,OAAOc,oBAAwCd,OAAOD,UAAUI,UAAUY,cAAc1C,SAAS,eCrC5H,SAAS2C,EAAsBC,EAAOC,GAMzC,IACI,IAAMR,EAAKV,OAAOU,GAClB,GANkB,CAClB,uBACA,gBAIkBS,MAAK,SAAAvD,GAAG,OAAIqD,EAAMrD,IAAIS,SAAST,MAC7C,OAAO8C,EAAGC,YAAYS,UAAUH,GAEhCC,EACAR,EAAGC,YAAYU,WAAWJ,GAE1BP,EAAGC,YAAYW,WAAWL,GAEhC,MAAOhB,IACLsB,MAAM,gCAAkCtB,KAMzC,SAASuB,EAA6BC,EAAMP,GAK3CF,EAHY,CACRpD,IAAI,8BAAD,OAAgC8D,mBAAmBD,KAE7BP,GC/BtB,SAAS1F,EAAMmG,GAAM,IACzBC,EAAwBD,EAAxBC,SAASnG,EAAekG,EAAflG,YAEhB,GAAImG,GAAanG,EAMjB,IACI,IAAIoG,EAAaC,EAAQ,GACrBC,EAAK,OAASL,mBAAmB1B,OAAOgC,SAASC,MAAQ,OAASxG,EAGtE,IAAK4E,EAQD,OAPIH,GACA2B,EAAc,SACdC,EAAQ,0CAERD,EAAc,cAElB7B,OAAOgC,SAASC,KAAOL,EAAWC,EAAcE,EAAKD,GAKzDxB,EAAqB4B,MAAK,SAACC,GACpBA,EAGCX,EAA6BI,GAF7BC,EAAc,cAEwCE,GADtDD,EAAQ,wBACyD,IAEjED,EAAc,SACd7B,OAAOgC,SAASC,KAAOL,EAAWC,EAAcE,EAAKD,MAG/D,MAAO7B,UAhCLlB,QAAQC,IAAI,wC,eCYVoD,I,WAOOC,I,WAQPC,I,YAcAC,I,YAWAC,I,YAOAC,I,YAaAC,I,YAWAC,I,YAgDO9G,I,YA6EQ+G,IApMzB,SAAUR,KAAV,iEAEQ,OAFR,SAEcS,YAAK3F,GAFnB,OAGQ,OAHR,SAGc4F,YAAKT,IAHnB,6DAOO,SAAUA,KAAV,iEACa,OADb,SACmBU,YAAOlG,GAD1B,iCAGC,OAHD,SAGOiG,YAAKR,IAHZ,OAIC,OAJD,SAIOU,YVGH,CACHtH,KAAMhB,IURP,uCAQP,SAAU4H,KAAV,iEAII,OAJJ,SAIUU,YAAI9F,KAJd,OAMI,OANJ,SAMU2F,YAAK3F,GANf,uCAcA,SAAUqF,KAAV,iEACI,OADJ,SACUU,YAAI,CACNC,YAAKT,IACLS,YAAKV,IACLU,YAAKR,IACLQ,YAAKP,MALb,wCAWA,SAAUH,KAAV,yEAEwB,OAFxB,SAE8BK,YAAK3F,GAFnC,OAGQ,OAHR,SAEepB,EAFf,EAEeA,MAFf,SAGcgH,YAAKjH,GAAWC,GAH9B,8DAOA,SAAU2G,KAAV,2EAEiB,OAFjB,SAEuBU,YAAcjG,EAAoBkG,IAAQC,QAAQ,IAFzE,OAEUC,EAFV,cAI8B,OAJ9B,SAIoCT,YAAKS,GAJzC,OAKQ,OALR,SAIe7H,EAJf,EAIeA,YAJf,UAKcqH,YAAKtH,EAAO,CACdC,YAAaA,EACbmG,SNnEUxE,mCM4DtB,QASQ,OATR,UASc0F,YAAKS,GAAO,KAT1B,gEAaA,SAAUb,KAAV,2EAEiB,OAFjB,SAEuBS,YAAcjG,EAA0BkG,IAAQC,QAAQ,IAF/E,OAEUC,EAFV,cAIsB,OAJtB,SAI4BT,YAAKS,GAJjC,OAKQ,OALR,SAIetH,EAJf,EAIeA,IAJf,UAKcgH,YAAI9F,EAAyBlB,IAL3C,QAMQ,OANR,UAMc8G,YAAKS,GAAO,MAN1B,QAOQ,OAPR,UAOcP,YVuBH,CACHtH,KAAMR,IU/Bd,gEAWA,SAAUyH,KAAV,yEAEiB,OAFjB,SAEuBQ,YAAcjG,EAAgCkG,IAAQC,QAAQ,IAFrF,OAEUC,EAFV,cAIsB,OAJtB,SAI4BT,YAAKS,GAJjC,OAKQ,OALR,WAIetH,IAJf,UAKcgH,YVgEH,CACHtH,KA/I0B,uBUyElC,QAMQ,OANR,UAMcoH,YAAKS,GAAO,MAN1B,QAOQ,OAPR,UAOcP,YVqEH,CACHtH,KArJ0B,uBUwElC,gEAgDO,SAAUG,GAAUC,EAAO0H,GAA3B,4EAEGrE,EAAKD,KACPpD,EAHD,gBAIC,OAJD,SAIOkH,YAAI9F,EAAmBiC,IAJ9B,2CLpIkBsE,EK4IE,OAAjB7H,EL3ICwD,IAAOC,IAAIoE,IAAQ,IKmIvB,iBAWC,OAXD,SAWOT,YAAI9F,EAA0BtB,EAAOuD,IAX5C,mCAcKqE,EAdL,iBAce,OAdf,UAcqBV,YAAKU,GAd1B,QAgBC,OAhBD,UAgBOR,YAAI9F,EAAmBiC,IAhB9B,kCLpIA,IAAkBsE,IKoIlB,IAqBA,SAASF,GAAMG,GAClB,OAAO,IAAInD,SAAQ,SAAUoD,EAAIC,GAC7BC,YAAW,WACPF,MACDD,MAoDI,SAAUd,KAAV,iEACX,OADW,SACLM,YAAKd,IADA,OAEX,OAFW,SAELc,YAAKX,IAFA,wCClNR,IAAMuB,GAAY,G,ICKrB7F,G,SAEA9B,GAAe,GAIb4H,GAAiBC,cACjBC,GAAa,CAACF,IAEdG,GAAY,CAACC,+BAEnB,SAASC,GAAYH,EAAYC,GAC7B,IAcmBjG,EAdfoG,EAAWC,sBACXC,0BAAgB,eACTC,IAEPrI,GACAsI,UAAO,WAAP,GACIC,kBAAe,WAAf,cAAmBT,KADvB,mBAEOC,MAIX,OAGmBjG,EAJLoG,GAMRM,SAAWZ,GAAea,ID3BhC,UAAO,SAAUC,IAAV,6EAEH,OAFG,SAEG3B,YAAKN,IAFR,OAICkC,EAAQC,OAAOC,OAAOlB,IAJvB,MAMcgB,EANd,yCAOC,OADKG,EANN,cAOOC,YAAMD,GAPb,+DAAUJ,OC6BjB5G,EAAMkH,UAAY,WACdlH,EAAMmH,SAASC,MAGnBpH,EAAMqH,cAAgB,GACtBrH,EAAMsH,WAAa,GAGnBtH,EAAMuH,WAAa,SAAC/B,EAAKgC,GAA6B,IAApBC,IAAmB,yDACjD,IAAIzH,EAAMqH,cAAcK,eAAelC,KACvCxF,EAAMqH,cAAc7B,GAAOgC,EAGtBC,GAAL,CACA,IAAIE,EAAarB,0BAAgB,2BAC1BC,GACAvG,EAAMqH,gBAEbrH,EAAM4H,eAAeD,KAIzB3H,EAAM6H,QAAU,SAACrC,EAAKwB,GAClBxB,EAAG,UAAMA,EAAN,QAECxF,EAAMsH,WAAWI,eAAelC,KAEpCxF,EAAMsH,WAAW9B,GAAOwB,EAExBhH,EAAM0G,SAAWZ,GAAea,IAAIK,KApCjCZ,EAyCX,IAAM0B,GAAQ,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,SAA8B,IAApBC,QAKtB,YAL0C,YAEtChI,GAAQmG,GAAYH,GAAYC,KAIhC,kBAAC,IAAD,CAAUjG,MAAOA,IACZ+H,I,2GCxEb,IAuCeE,GAvCO,SAACC,GAAD,OAAgB,SAAAC,GAAqB,IACjDC,EADgD,oDAElD,WAAYC,GAAQ,IAAD,wBACf,gBACKtJ,MAAQ,CACTuJ,SAAS,GAEb,EAAKJ,WAAaA,EAAapB,OAAOyB,QAAQL,GAAc,GAL7C,IAORM,EAAU,EAAKN,WAAfM,OAEP,IAAKA,EAAQ,uBAEb,IAAKxI,GACD,MAAM,IAAIyI,MAAJ,2BAZK,OAcf,EAAKP,WAAWQ,SAAQ,WAAeC,GAAW,IAAD,mBAAvBnD,EAAuB,KAAlBoD,EAAkB,KACxCpB,EAAiBoB,EAAjBpB,QAASR,EAAQ4B,EAAR5B,KACVS,GAAU,EACVkB,IAAUH,EAAS,IACnBf,GAAU,GAEdzH,GAAMuH,WAAW/B,EAAKgC,EAASC,GAC/BzH,GAAM6H,QAAQrC,EAAKwB,MAEvB,EAAKjI,MAAMuJ,SAAU,EAvBN,EAF+B,sDA6B9C,OAAOO,KAAK9J,MAAMuJ,QAAU,kBAACH,EAAqBU,KAAKR,OAAY,SA7BrB,GACjBS,aAmCrC,OAHAV,EAAuBW,YAAvB,wBAtCJ,SAAwBZ,GACpB,OAAOA,EAAiBY,aAAeZ,EAAiBa,MAAQ,YAqCVC,CAAed,GAArE,KAEAe,KAAoBd,EAAwBD,GACrCC,IC7CEe,GAAa,eACbC,GAAiB,mBCC9B,IAAMlL,GAAe,CACjBC,MAAM,GAkBH,SAASkL,GAAT,GACH,OAD2C,EAAfC,KAAOnL,K,mBCP7BgG,I,YAaOoF,I,YASPC,I,YAOAC,I,YAKAnF,I,YAceoF,IAhDzB,SAAUvF,KAAV,iEAEQ,OAFR,SAEcS,YAAK5F,IAFnB,OAOQ,OAPR,SAOc6F,YAAK0E,IAPnB,OASQ,OATR,SASc1E,YAAK4E,IATnB,8DAaO,SAAUF,KAAV,iEACU,OADV,SACgBzE,YAAOuE,IADvB,iCAGC,OAHD,SAGOxE,YAAK2E,IAHZ,OAIC,OAJD,SAIOzE,YFlBH,CACHtH,KAAM2L,KEaP,wCASP,SAAUI,KAAV,iEACI,OADJ,SACUxE,YAAI,IADd,wCAOA,SAAUyE,KAAV,kGAKA,SAAUnF,KAAV,iEAEI,OAFJ,SAEUU,YAAI,IAFd,wCAce,SAAU0E,KAAV,iEACX,OADW,SACLzE,YAAKd,IADA,OAEX,OAFW,SAELc,YAAKX,IAFA,wCChDf,IAIMqF,GAAc,CAChBC,UHdG,WACH,MAAO,CACHnM,KAAM0L,KGaVlL,aAqCW4L,GA3BdC,GAPqB,CAClB,KAAQ,CACJtC,QFnBO,WAAiD,IAA/BzI,EAA8B,uDAAtBb,GAAcc,EAAQ,uCAC3D,OAAQA,EAAOvB,MACX,KAAKsM,GACD,OAAO,2BACAhL,GADP,IAEIZ,MAAM,IAEd,QACI,OAAOY,IEYXiI,U,IAKPgD,aAjBgB,SAACjL,GAAD,MAAY,KAiBV4K,G,wDAEf,WAAYtB,GAAQ,IAAD,8BACf,gBAEAuB,EADoBvB,EAAbuB,aAEP,EAAK7K,MAAQ,GAJE,E,sDASf,OAAO,yBAAKkL,UAAU,kBAClB,kBAACC,GAAA,EAAD,KACI,gDAEJ,yBAAKD,UAAU,YAAf,2BAGA,yBAAKA,UAAU,WAAf,oB,GAjBOE,mB,QChCNC,I,MAAe,kBACfC,GAAmB,qBCChC,IAAMnM,GAAe,CACjBC,MAAM,GAkBH,SAASmM,GAAT,GACH,OAD+C,EAAjBC,OAASpM,K,mBCRjCgG,I,YAUOqG,I,YAWPC,I,YAOAC,I,YAKApG,I,YAceqG,IA/CzB,SAAUxG,KAAV,iEAEQ,OAFR,SAEcS,YAAK5F,IAFnB,OAKQ,OALR,SAKc6F,YAAK2F,IALnB,OAMQ,OANR,SAMc3F,YAAK6F,IANnB,8DAUO,SAAUF,KAAV,iEAEU,OAFV,SAEgB1F,YAAOwF,IAFvB,iCAKC,OALD,SAKOzF,YAAK4F,IALZ,OAMC,OAND,SAMO1F,YFhBH,CACHtH,KAAM4M,KESP,wCAWP,SAAUI,KAAV,iEACI,OADJ,SACUzF,YAAI,IADd,wCAOA,SAAU0F,KAAV,kGAKA,SAAUpG,KAAV,iEAEI,OAFJ,SAEUU,YAAI,IAFd,wCAce,SAAU2F,KAAV,iEACX,OADW,SACL1F,YAAKd,IADA,OAEX,OAFW,SAELc,YAAKX,IAFA,wCC9Cf,ICAIsG,GDIEjB,GAAc,CAChBkB,YHdG,WACH,MAAO,CACHpN,KAAM2M,KGaVnM,aElBS6M,GAAS,CAClB,IAAK,CACDC,UAAWlB,GACXmB,OAAO,GAEX,UAAW,CACPD,UFsBPjB,GAPqB,CAClB,OAAU,CACNtC,QFnBO,WAAiD,IAA/BzI,EAA8B,uDAAtBb,GAAcc,EAAQ,uCAC3D,OAAQA,EAAOvB,MACX,KAAKsM,GACD,OAAO,2BACAhL,GADP,IAEIZ,MAAM,IAEd,QACI,OAAOY,IEYXiI,U,IAKPgD,aAjBgB,SAACjL,GAAD,MAAY,KAiBV4K,G,wDAEf,WAAYtB,GAAQ,IAAD,8BACf,gBAEAwC,EADsBxC,EAAfwC,eAEP,EAAK9L,MAAQ,GAJE,E,sDAOf,OAAO,yBAAKkL,UAAU,YAClB,kBAACC,GAAA,EAAD,KACI,4DAEJ,yBAAKD,UAAU,WAAf,4B,GAZSE,mB,QEvBba,OAAO,IDKFC,GAAY,GAGzBlJ,OAAOkJ,UAAYA,GAEZ,IAAMC,GAAY,SAAZA,EAAa,GAAyB,IAAxBJ,EAAuB,EAAvBA,OAAuB,IAAfK,YAAe,MAAR,GAAQ,EAC9C,OAAOC,QAAQC,QAAQP,GAAQQ,KAAI,SAACC,GAAc,MAEFT,EAAOS,GAA9CR,EAFyC,EAEzCA,UAAWC,EAF8B,EAE9BA,MAAeQ,EAFe,EAEvBV,OAEvBG,GAAUM,GAAa,YACvB,IAAIE,EAAON,EAAOI,EAElB,OAAKR,GAAaS,EAEV,kBAAC,KAAD,CACIhG,IAAKiG,EACLT,MAAOA,EACPS,KAAMA,EACN1D,SAAU,kBAACmD,EAAD,CAAWC,KAAMM,EAAMX,OAAQU,MAK7C,kBAAC,KAAD,CACIhG,IAAKiG,EACLT,MAAOA,EACPS,KAAMA,EACNV,UAAWA,QAQzBW,GAAS,SAACrD,GAAW,IAChBN,EAA4BM,EAA5BN,SAAU4D,EAAkBtD,EAAlBsD,KAAM5H,EAAYsE,EAAZtE,SACnB6H,EAAQ,kBAAC,GAAD,CAAWd,OAAQA,KAmB/B,OAlBI/C,GAAY8D,IAAMC,eAAe/D,KACjC6D,EAAOC,IAAME,aAAahE,EAAU,CAChCA,SAAU,kBAAC,GAAD,CAAW+C,OAAQA,QAwBzC,SAAyBF,GACrB,IAAMoB,EAAepB,EAAQ7G,SAASkI,SAClCC,EAAOtB,EAAQsB,KAAO,CAACF,GAC3BpB,EAAQuB,QAAO,SAACpI,EAAU/E,GAAW,IAI5BiN,EAAYlI,EAAZkI,SACAzD,EAAU0D,EAAV1D,OAEL,GAAIyD,IAAaC,EAAKA,EAAK1D,OAAS,GAEpC,GAAe,SAAXxJ,EACAkN,EAAK1L,KAAKyL,QACP,GAAe,YAAXjN,EACPkN,EAAK1D,EAAS,GAAKyD,OAChB,GAAe,QAAXjN,EAAkB,CACNkN,EAAK1D,EAAS,KACZyD,EAEjBC,EAAKE,MAGLF,EAAK1L,KAAKyL,OAKtBrB,EAAQyB,SAAW,SAAkBZ,EAAM1M,GAEvC,IAAIuN,EAA6B,EAAdJ,EAAK1D,OAEpB8D,EAAc,GAAG1B,EAAQ2B,GAAGD,GAEhCJ,EAAOtB,EAAQsB,KAAO,CAACF,GAEnBP,IAASO,GACTpG,YAAW,WACPgF,EAAQnD,QAAQgE,EAAM1M,KACvB,IAjDXyN,CATI5B,GADS,WAATe,EACUc,aAAoB,CAC1BC,eAAgB,CAAC3I,KAEL,YAAT4H,EACGgB,eAEAC,gBAMV,kBAAC,KAAD,CAAgBhC,QAASA,IACpBgB,I,YAoDb,I,SEnEeiB,GApDoB,eAACC,EAAD,uDAAgB,IAAhB,OAAwB,SAAA3E,GAAqB,IAEtE4E,EAFqE,oDAGvE,cAA8B,IAAD,MAAhBzH,aAAgB,sCACzB,gBAEKvG,MAAQ,CACTiO,MAAM,EACN1H,SAGJ,EAAK2H,MAAQ,KARY,EAH0C,iEAclD,IAAD,SACqBpE,KAAKR,MAAnC/C,EADS,EACTA,MADS,IACFG,YADE,MACKqH,EADL,EAEZxH,IACAuD,KAAKoE,MAAQrH,YAAW,WACpB,EAAKsH,SAAS,CACV5H,OAAO,MAEZG,MArB4D,6CA0BnE0H,aAAatE,KAAKoE,SA1BiD,+BA6B7D,IAAD,EACiBpE,KAAK9J,MAApBiO,EADF,EACEA,KAAM1H,EADR,EACQA,MAEb,OAAQ0H,GAAQ1H,EAAQ,KAAO,kBAAC6C,EAAqBU,KAAKR,WAhCS,GAEzC8B,iBAoClC,OAFA4C,EAAoBhE,YAApB,qBAAgDZ,EAAiBY,aAAeZ,EAAiBa,MAAQ,YAAzG,KAEO+D,GAGVK,E,+KAGO,OACI,yBAAKnD,UAAU,WACX,yBAAKA,UAAU,sB,GAJTE,mB,GC3BhBR,GAAc,CAChB0D,UzBqGG,WACH,MAAO,CACH5P,KAAMN,KyBGCmQ,I,GAvGdtD,aAfgB,SAACjL,GACd,MAAO,CACHV,UAAWU,EAAMF,IAAIR,UACrBE,YAAaQ,EAAMF,IAAIN,YACvBD,YAAaS,EAAMF,IAAIP,YACvBY,SAAUH,EAAMF,IAAIK,SACpBV,SAAUO,EAAMF,IAAIL,SACpBE,eAAgBK,EAAMF,IAAIH,kBAQfiL,IADlB4D,a,6DAGG,WAAYlF,GAAQ,IAAD,+BACf,gBAoEJmF,eAAiB,WAEb,OADuB,EAAKnF,MAAvB3J,eAEC,6BACE,yBAAKuL,UAAU,iBACX,yBAAKA,UAAU,SACf,4DAGN,MA9ES,E,4DAMH,IAAD,EAC6BpB,KAAKR,MAA3B4D,EADP,EACJlI,SAAWkI,SAAWrB,EADlB,EACkBA,QAIzB6C,GAAmD,IADhC,CAAC,IAAK,WACGC,QAAQzB,GACxC,OACI,yBAAKhC,UAAW,UAAYwD,EAAa,QAAU,KAC/C,yBACIxD,UAAW,eAA8B,MAAbgC,EAAmB,UAAY,IAC3D0B,QAAS,WACY,MAAb1B,GACArB,EAAQnD,QAAQ,OAJ5B,gBAUA,yBAAKwC,UAAU,SACf,yBAAKA,UAAW,eAA6C,WAA3BgC,EAAS2B,MAAM,KAAK,GAAmB,UAAY,IAChFD,QAAS,WAC2B,WAA3B1B,EAAS2B,MAAM,KAAK,IACrBhD,EAAQnD,QAAQ,aAH7B,gBASA,yBAAKwC,UAAU,SACf,yBAAKA,UAAW,cAA6B,MAAbgC,EAAmB,UAAY,IAC1D0B,QAAS,WACY,MAAb1B,GACArB,EAAQnD,QAAQ,OAH7B,mB,oCAcG,IAAD,EACoBoB,KAAKR,MAA5BhK,EADG,EACHA,UAAWa,EADR,EACQA,SAClB,OACI,yBAAK+K,UAAW,SAAW5L,EAAY,QAAU,KAAMa,K,oCAKhD,IAAD,EACiC2J,KAAKR,MAAzC/J,EADG,EACHA,YAAaE,EADV,EACUA,SAAU6O,EADpB,EACoBA,UAC9B,OACI,yBAAKpD,UAAW,SAAW3L,EAAc,QAAU,KAC/C,yBAAK2L,UAAU,OAAO0D,QAAS,WAC3BN,OAEJ,yBAAKpD,UAAU,cAAczL,M,+BAiB/B,IACCD,EAAesK,KAAKR,MAApB9J,YACP,OACI,yBAAK0L,UAAU,OACX,kBAACC,GAAA,EAAD,KACI,4DAEHrB,KAAKR,MAAMN,SACXc,KAAKgF,cACLhF,KAAKiF,cACLjF,KAAKkF,eACLlF,KAAK2E,iBACLjP,GAAe,kBAAC,GAAD,CAAS+G,OAAO,S,GA9F9B6E,mB,SCnBZyB,GACF,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAQD,KAAK,QACV,kBAAC,GAAD,QAKXqC,iBAAOpC,GAAMqC,SAASC,eAAe,W","file":"static/js/main.ee745eaf.chunk.js","sourcesContent":["export const INIT_APP = '@@INIT_APP'\nexport const INIT_APP_DONE = '@@INIT_APP_DONE'\nexport const SAVE_PRELOAD = 'SAVE_PRELOAD'\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const NEED_LOGIN = 'NEED_LOGIN'\nexport const GET_USER_INFO = 'GET_USER_INFO'\nexport const RECEIVE_USER_INFO = 'RECEIVE_USER_INFO'\nexport const RECEIVE_USER_INFO_FAIL = 'RECEIVE_USER_INFO_FAIL'\nexport const PUT_MESSAGE = 'PUT_MESSAGE'\nexport const SHOW_MESSAGE = 'SHOW_MESSAGE'\nexport const HIDE_MESSAGE = 'HIDE_MESSAGE'\nexport const SHOW_MODAL = 'SHOW_MODAL'\nexport const HIDE_MODAL = 'HIDE_MODAL'\nexport const SHOW_LOADING = 'SHOW_LOADING'\nexport const HIDE_LOADING = 'HIDE_LOADING'\nexport const PUT_MODAL_MESSAGE = 'PUT_MODAL_MESSAGE'\nexport const SHOW_MODAL_MESSAGE = 'SHOW_MODAL_MESSAGE'\nexport const HIDE_MODAL_MESSAGE = 'HIDE_MODAL_MESSAGE'\nexport const SET_STATE = 'SET_STATE'\nexport const GET_BANNER_CONFIG = 'GET_BANNER_CONFIG'\n// 风控加载成功\nexport const PAY_EGIS_SUCCESS = 'PAY_EGIS_SUCCESS'\n\n// 全局初始化\nexport function initApp() {\n    return {\n        type: INIT_APP\n    }\n}\n\n// 全局初始化完成\nexport function initAppDone() {\n    return {\n        type: INIT_APP_DONE\n    }\n}\n\n\n\n// 登陆\nexport function login(fingerPrint) {\n    return {\n        type: LOGIN,\n        fingerPrint\n    }\n}\n\n// 储存token\nexport function loginSuccess(token, fingerPrint) {\n    return {\n        type: LOGIN_SUCCESS,\n        fingerPrint,\n        token\n    }\n}\n\n// 登陆\nexport function needLogin(force) {\n    return {\n        type: NEED_LOGIN,\n        force\n    }\n}\n\n// 获取用户信息\nexport function getUserInfo(loading) {\n    return {\n        type: GET_USER_INFO,\n        loading\n    }\n}\n\n// 获取用户信息\nexport function receiveUserInfo(userInfo) {\n    return {\n        type: RECEIVE_USER_INFO,\n        userInfo\n    }\n}\n\n// 获取用户信息失败\nexport function receiveUserInfoFail(error) {\n    return {\n        type: RECEIVE_USER_INFO_FAIL,\n        error\n    }\n}\n\n// 推送错误消息\nexport function putMessage(msg, res) {\n    return {\n        type: PUT_MESSAGE,\n        msg,\n        res\n    }\n}\n\n// 显示错误消息\nexport function showMessage(msg, res) {\n    return {\n        type: SHOW_MESSAGE,\n        msg,\n        res\n    }\n}\n\n// 隐藏错误消息\nexport function hideMessage() {\n    return {\n        type: HIDE_MESSAGE\n    }\n}\n\n// 显示错误消息\nexport function showModal(msg) {\n    return {\n        type: SHOW_MODAL,\n        msg\n    }\n}\n\n// 隐藏错误消息\nexport function hideModal() {\n    return {\n        type: HIDE_MODAL\n    }\n}\n\n// 显示加载\nexport function showLoading() {\n    return {\n        type: SHOW_LOADING,\n    }\n}\n\n// 隐藏加载\nexport function hideLoading() {\n    return {\n        type: HIDE_LOADING\n    }\n}\n\n\n// 风控加载成功\nexport function payEgisSuccess(uuid) {\n    return {\n        type: PAY_EGIS_SUCCESS,\n        uuid\n    }\n}\n\nexport function putModalMessage() {\n    return {\n        type: PUT_MODAL_MESSAGE\n    }\n}\n\nexport function showModalMessage() {\n    return {\n        type: SHOW_MODAL_MESSAGE\n    }\n}\n\n\nexport function hideModalMessage() {\n    return {\n        type: HIDE_MODAL_MESSAGE\n    }\n}\n\nexport function setState(data) {\n    return {\n        type: SET_STATE,\n        data\n    }\n}\n\nexport function getBannerConfig(activityId) {\n    return {\n        type: GET_BANNER_CONFIG,\n        activityId\n    }\n}","import * as globalAction from \"./actions\";\n\n//初始化全局数据\nconst initialState = {\n    init: false,//初始化状态\n    userInfo: {},\n    token: '',\n    fingerPrint: '',\n    showToast: false,\n    showModalEl: false,\n    showLoading: false,\n    modalMsg: '',\n    preload: {},\n    showModalToast: false,\n    bannerConfigMap: {}//所有的弹窗配置，key为弹窗的id\n}\n\n// reducer\n\nexport default function reducers(state = initialState, action) {\n    switch (action.type) {\n        case globalAction.INIT_APP_DONE:\n            return {\n                ...state,\n                init: true\n            }\n        case globalAction.SAVE_PRELOAD:\n            return {\n                ...state,\n                preload: action.preload\n            }\n        case globalAction.LOGIN_SUCCESS:\n            return {\n                ...state,\n                fingerPrint: action.fingerPrint,\n                token: action.token\n            };\n        case globalAction.RECEIVE_USER_INFO:\n            return {\n                ...state,\n                // userInfo: action.userInfo\n            };\n        case globalAction.SHOW_MESSAGE:\n            return {\n                ...state,\n                showToast: true,\n                toastMsg: action.msg\n            };\n        case globalAction.HIDE_MESSAGE:\n            return {\n                ...state,\n                showToast: false\n            };\n        case globalAction.SHOW_LOADING:\n            return {\n                ...state,\n                showLoading: true\n            };\n        case globalAction.HIDE_LOADING:\n            return {\n                ...state,\n                showLoading: false\n            };\n        case globalAction.SHOW_MODAL:\n            return {\n                ...state,\n                modalMsg: action.msg,\n                showModalEl: true\n            };\n        case globalAction.HIDE_MODAL:\n            return {\n                ...state,\n                showModalEl: false\n            };\n        default:\n            return state\n    }\n}\n\n\n// selectors\nexport function selectAppInit({app: {init}}) {\n    return init\n}\n\nexport function selectPreLoad({app: {preload}}) {\n    return preload\n}\n\nexport function selectAppUUID({app: {uuid}}) {\n    return uuid\n}\n\nexport function selectLoadingState({app: {loading}}) {\n    return loading\n}","// 同步的reducers\n\nimport app from '../../pages/App/model/reducers'\n\nexport const reducers = {\n    app,\n    //home\n}","let apis = {\n    api: \"https://newactivity.huazhu.com\",\n}\n\n\nexport const api = apis.api;","import {store} from \"../redux\";\nimport axios from 'axios'\nimport {api} from './env.config'\n// import {isHuaZhuApp, isMiniProgramPromise, isMiniProgramSync, isWeixin} from \"../utils/env\";\n// import {navigateToMiniProgramWebview} from \"../utils/navigateToMiniProgram\";\n\nexport const server = api\nexport const ajax = axios.create()\n\n\najax.interceptors.request.use((config) => {\n    let {url, data, headers, method, params} = config\n    const {token,} = store.getState().app\n\n    // 添加sk && 添加指纹\n    data ? data.sk = token : data = {sk: token}\n    // headers.fp = fingerPrint\n\n    // 处理url\n    let baseURL = `${api}/`\n    if (url.includes('http')) {\n        baseURL = ''\n    }\n    if (/^\\//.test(url)) {\n        baseURL = api + '/v1/pointStore'\n    }\n\n    // 处理数据格式\n    if (!headers['Content-Type']) {\n        headers['Content-Type'] = 'application/x-www-form-urlencoded'\n\n        if (method === 'post') {\n            let temp = []\n            for (let i in data) {\n                temp.push(i + '=' + encodeURI(data[i]))\n            }\n            data = temp.join('&')\n        } else {\n            params = params ? {...data, ...params} : data\n        }\n    }\n\n\n    return {\n        ...config,\n        data,\n        params,\n        headers,\n        baseURL\n    }\n})\n\n\najax.interceptors.response.use(\n    (res) => {\n        const {status, data} = res\n\n        if (status === 200) return data\n    },\n    (error) => {\n\n        console.log('底层出错:', error)\n\n        return {\n            code: 700\n        }\n    }\n)\n\n\nexport function getBanner() {\n    return ajax({\n        url: '/banner'\n    })\n}","import cookie from \"js-cookie\";\nimport uuid from './uuid'\n\n/* ****** 获取token ****** */\n\n// getToken\nexport function getToken(key) {\n    return cookie.get(key) || '';\n}\n\n// saveToken\nexport function saveToken(key) {\n    const queryToken = getUrlQuery(key);\n\n    // 隐藏token\n    setUrlQuery(key,'',true)\n\n    const token = queryToken || cookie.get(key) || '';\n\n    cookie.set(key, token, {\n        expires: 20 / 60 / 24\n    });\n}\n\n/* ****** 获取fingerPrint ****** */\n\n// 暂时使用uuid代替 可考虑Fingerprintjs2\n\nexport function getFingerPrint() {\n    // 从本地获取已有fp\n    let fp = cookie.get('fp')\n\n    if(!fp) {\n        fp = uuid()\n        cookie.set('fp',fp, {\n            expires: 3650\n        })\n    }\n\n    return fp\n}\n\n/* ****** url解析相关方法 ****** */\n\n// 解析Url参数\nexport function parseUrlQuery(){\n    let {search,hash} = window.location\n\n    const queryJson = {}\n\n    if (!search && hash.indexOf('?') !== -1) {\n        search = '?' + hash.split('?')[1];\n    }\n\n    let query = search.match(/([?&])[^&]+/ig);\n    if (query) {\n        query.forEach(function (str) {\n            let arr;\n            str = str.substring(1);\n            str = str.replace(/=/, '==');\n            arr = str.split('==');\n            queryJson[arr[0]] = arr[1] ? arr[1] : ''\n        })\n    }\n\n    return queryJson\n}\n\n// 获取相应参数\nexport function getUrlQuery(key) {\n    const queryJson = parseUrlQuery()\n\n    return queryJson[key]\n}\n\n// 添加相应参数\nexport function setUrlQuery(key, value, isDelete) {\n    const queryJson = parseUrlQuery()\n\n    let {hash,origin,pathname} = window.location\n\n    if(isDelete){\n        delete queryJson[key]\n    } else {\n        queryJson[key] = value\n    }\n\n    let newSearch = Object.entries(queryJson).map(([key, value]) => {\n        return `${key}=${value}`\n    }).join('&')\n\n    if(newSearch) newSearch = '?' + newSearch\n\n    window.history.replaceState({}, '', origin + pathname + newSearch + hash.split('?')[0]);\n}\n","// 生成UUID\n\nexport default function uuid() {\n    let s = [];\n    let hexDigits = \"0123456789abcdef\";\n    for (let i = 0; i < 36; i++) {\n        s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n    }\n    s[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\n    s[8] = s[13] = s[18] = s[23] = \"-\";\n\n    return s.join(\"\");\n}","export const isNode = typeof window === 'undefined'\n\nexport const isClient = !isNode\n\n\nlet navigator\n\ntry {\n    navigator = window.navigator\n} catch (e) {\n    navigator = {}\n}\nexport const isHuaZhuApp = /huazhu/i.test(navigator.userAgent) && !window.ETone\nexport const isIos = /ios|iphone|ipad|ipod/i.test(navigator.userAgent)\n\nexport const isAndroid = /android/i.test(navigator.userAgent)\n\nexport const isWeixin = /MicroMessenger/i.test(navigator.userAgent)\n\n// 小程序环境异步获取\nexport const isMiniProgramPromise = new Promise((resolve, reject) => {\n    try {\n        const wx = window.wx\n        wx.miniProgram.getEnv((res) => {\n            resolve(res.miniprogram)\n        })\n    } catch (e) {\n        // reject(e)\n    }\n});\n\n// isMiniProgramPromise.then((is)=>{\n//     if(is){\n//         window.wx.miniProgram.postMessage({\n//             data: {\n//                 shareInfo\n//             }\n//         })\n//     }\n// })\n\n\n// 判断当前是否在小程序环境\nexport const isMiniProgramSync = (window.__wxjs_environment === 'miniprogram' || window.navigator.userAgent.toLowerCase().includes('miniprogram'))\n\n\n","/**\n * 跳转小程序原生\n * @param param    {url:\"\"}\n * @param redirect 是否使用redirectTo\n * @returns {*}\n */\nexport function navigateToMiniProgram(param, redirect) {\n    //需要用switchTab跳转的链接\n    const switchTabUrls = [\n        '/pages/search/search',\n        '/pages/my/my'\n    ]\n    try {\n        const wx = window.wx\n        if (switchTabUrls.some(url => param.url.includes(url))) {\n            return wx.miniProgram.switchTab(param)\n        }\n        if (redirect) {\n            wx.miniProgram.redirectTo(param)\n        } else {\n            wx.miniProgram.navigateTo(param)\n        }\n    } catch (e) {\n        alert('navigateToMiniProgram Error :' + e)\n    }\n}\n\n\n// 跳转小程序webview\nexport function navigateToMiniProgramWebview(link, redirect) {\n    if (verifyMiniProgramUrl(link)) {\n        let param = {\n            url: `/pages/webview/webview?src=${encodeURIComponent(link)}`\n        };\n        navigateToMiniProgram(param, redirect)\n    } else {\n        alert('小程序中暂不支持跳转该域名')\n    }\n}\n\n// 因小程序需要验证有效域名 这里提前做判断\nfunction verifyMiniProgramUrl(url) {\n    return true\n    // let domainList = [\n    //     'https://newactivity.huazhu.com',\n    //     'https://campaign.huazhu.com',\n    //     'https://m.huazhu.com',\n    //     'https://hmall.huazhu.com',\n    //     'http://10.105.16.50',\n    //     'https://test-newactivity.huazhu.com',\n    //     'http://dev.huazhu.com',\n    // ];\n    //\n    // let domain = url.match(/http(s)?:\\/\\/([^/]+)/i)\n    //\n    // domain = domain?domain[0]:'';\n    //\n    // if(domainList.indexOf(domain) !== -1){\n    //     return true\n    // }\n}","import {isWeixin, isMiniProgramPromise, isHuaZhuApp} from './env'\nimport {navigateToMiniProgramWebview} from './navigateToMiniProgram'\n\nexport default function login(arg) {\n    const {loginUrl,fingerPrint} = arg\n\n    if(!loginUrl || !fingerPrint) {\n        console.log('缺少登陆参数')\n        return\n    }\n\n\n    try {\n        let loginAction, query = ''\n        let to = '?to=' + encodeURIComponent(window.location.href) + '&fp=' + fingerPrint\n\n        // 非微信逻辑\n        if (!isWeixin) {\n            if (isHuaZhuApp) {\n                loginAction = '/login'\n                query = '&has_video=true&APP_NeedLoginInfo=True'\n            } else {\n                loginAction = '/login'\n            }\n            window.location.href = loginUrl + loginAction + to + query\n            return\n        }\n\n        // 微信内登陆\n        isMiniProgramPromise.then((is)=>{\n            if(is){\n                loginAction = '/miniLogin'\n                query = '&MiniNeedLogin=true'\n                navigateToMiniProgramWebview(loginUrl + loginAction + to + query,true)\n            } else {\n                loginAction = '/login'\n                window.location.href = loginUrl + loginAction + to + query\n            }\n        })\n    } catch (e) {\n\n    }\n}\n","/* 全局sage */\nimport {all, call, fork, put, select, take, actionChannel, takeEvery} from 'redux-saga/effects'\nimport {buffers} from 'redux-saga'\n\nimport * as api from '../../../common/services'\n\nimport * as globalAction from \"./actions\";\n\nimport {selectAppInit,} from \"./reducers\";\n\n// 获取token\nimport {getToken, getFingerPrint} from \"../../../common/utils/token\";\n\n// login\nimport login from \"../../../common/utils/login\";\n// 对接风控\n//import pagEgis from '../../../common/utils/payEgis'\n\n/* app 主流程 */\nfunction* main() {\n    while (true) {\n        yield take(globalAction.INIT_APP)\n        yield call(checkAppInit)\n    }\n}\n\nexport function* checkAppInit() {\n    const appInit = yield select(selectAppInit)\n    if (!appInit) {\n        yield call(initApp)\n        yield put(globalAction.initAppDone())\n    }\n}\n\nfunction* initApp() {\n    // 对接风控\n    // yield fork(payEgis)\n    // 登陆\n    yield put(globalAction.needLogin())\n    // 等待登陆成功\n    yield take(globalAction.LOGIN_SUCCESS)\n    // 获取用户数据\n    // yield call(getUserInfo, true)\n}\n\n\n/* ******* watcher ******* */\n\nfunction* watchRegister() {\n    yield all([\n        fork(watchLogin),\n        fork(watchNeedLogin),\n        fork(watchPutMessage),\n        fork(watchPutModalMessage)\n    ])\n}\n\n\n// 监听登录action\nfunction* watchNeedLogin() {\n    while (true) {\n        const {force} = yield take(globalAction.NEED_LOGIN);\n        yield call(needLogin, force);\n    }\n}\n\nfunction* watchLogin() {\n    //  actionChannel  是缓存action\n    const chan = yield actionChannel(globalAction.LOGIN, buffers.sliding(1));\n    while (true) {\n        const {fingerPrint} = yield take(chan);\n        yield call(login, {\n            fingerPrint: fingerPrint,\n            loginUrl: api.server\n        });\n        yield call(delay, 5000);\n    }\n}\n\nfunction* watchPutMessage() {\n    // 生成消息队列 依次推送消息\n    const chan = yield actionChannel(globalAction.PUT_MESSAGE, buffers.sliding(3))\n    while (true) {\n        const {msg} = yield take(chan)\n        yield put(globalAction.showMessage(msg))\n        yield call(delay, 1500)\n        yield put(globalAction.hideMessage())\n    }\n}\n\nfunction* watchPutModalMessage() {\n    // 生成消息队列 依次推送消息\n    const chan = yield actionChannel(globalAction.PUT_MODAL_MESSAGE, buffers.sliding(3))\n    while (true) {\n        const {msg} = yield take(chan)\n        yield put(globalAction.showModalMessage())\n        yield call(delay, 1500)\n        yield put(globalAction.hideModalMessage())\n    }\n}\n\n// function* watchGetUserInfo() {\n//     while (true) {\n//         const {loading} = yield take(globalAction.GET_USER_INFO)\n//         yield call(getUserInfo, loading)\n//     }\n// }\n\n\n/* ******** worker ******** */\n\n// 对接风控\n/*function* payEgis() {\n    const uuid = yield call(pagEgis)\n    yield put(globalAction.payEgisSuccess(uuid))\n}*/\n\n// 获取用户信息\n// function* getUserInfo(loading) {\n//     //模拟延迟\n//     //yield call(delay,2000)\n//     yield call(checkRes, {\n//         api: api.getUserInfo,\n//         loading: loading,\n//         success: (data) => put(globalAction.receiveUserInfo(data)),\n//         failed: (res, e) => {\n//             return all([\n//                 put(globalAction.receiveUserInfoFail(e)),\n//                 put(globalAction.putMessage('用户信息获取失败'))\n//             ])\n//         }\n//     })\n// }\n\n\n/* ******** global methods ******** */\n\n// 登陆\nexport function* needLogin(force, callback) {\n    // 获取指纹\n    const fp = getFingerPrint()\n    if (force) {\n        yield put(globalAction.login(fp))\n        return\n    }\n    // 获取token\n    const token = getToken('sk')\n\n    if (token) {\n        yield put(globalAction.loginSuccess(token, fp))\n    } else {\n        // 需要登陆 登陆前可执行某些逻辑\n        if (callback) yield call(callback)\n        // 跳转登陆\n        yield put(globalAction.login(fp))\n    }\n}\n\n// 延迟\nexport function delay(time) {\n    return new Promise(function (re, rj) {\n        setTimeout(function () {\n            re()\n        }, time)\n    })\n}\n\n/**\n *封装checkRes方法 对后端的响应数据进行处理\n * @param api      调用接口的函数\n * @param data     接口参数\n * @param success  成功函数\n * @param failed   失败函数\n * @param loading  是否loading\n * @returns {Generator<CallEffect|PutEffect<{force: *, type: string}>|PutEffect<{type: string}>|PutEffect<{msg: *, res: *, type: string}>|*|PutEffect<{msg: *, type: string}>, void, *>}\n */\nexport function* checkRes({api, data, success, failed, loading}) {\n    // 统一loading处理\n    if (loading) {\n        yield put(globalAction.showLoading())\n    }\n\n    const res = yield call(api, data)\n    const code = parseInt(res.code, 10)\n    if (code === 200) {\n        // 服务端响应成功\n        yield success(res.data)\n    } else if (code === 400) {\n        // 需要登陆\n        yield put(globalAction.needLogin(true))\n    } else if (code === 406) {\n        // yield window.location.href = businessInterceptor\n    } else if (code === 600) {\n        // 服务端业务逻辑处理失败\n        yield put(globalAction.putMessage(res.msg))\n        yield failed(res.msg, res)\n    } else if (code === 700) {\n        // 客户端或服务端执行出错 阻塞后续逻辑执行\n        yield put(globalAction.showModal('网络出错，请稍后再试！'))\n        // todo 请求重试及中断后续请求\n    } else if (code === 500) {\n        // 客户端或服务端执行出错 阻塞后续逻辑执行\n        yield put(globalAction.showModal('网络出错，请稍后再试'))\n        // todo 请求重试及中断后续请求\n    } else {\n        // 其他异常\n        yield failed('code校验失败', res)\n    }\n\n    // 统一loading处理\n    if (loading) {\n        yield put(globalAction.hideLoading())\n    }\n}\n\nexport default function* appSaga() {\n    yield fork(main)\n    yield fork(watchRegister)\n}\n","import {spawn, fork} from 'redux-saga/effects'\n// DOC  根saga\nimport appSaga from \"../../pages/App/model/effects\";\n//DOC 同步saga\n//import homeSaga from '../../pages/Home/model/effects'\nexport const syncSagas = {\n    //homeSaga\n}\n\n\nexport function getRootSagas() {\n    return function* rootSagas() {\n\n        yield fork(appSaga)\n\n        let sagas = Object.values(syncSagas)\n\n        for (let saga of sagas) {\n            yield spawn(saga)\n        }\n    }\n}","import React from 'react'\nimport {Provider} from 'react-redux'\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux'\n//引入reducer\nimport {reducers as syncReducers} from './reducers'\n// redux-saga\nimport createSagaMiddleware, {END} from 'redux-saga'\nimport {getRootSagas} from './sagas'\n//调试 在测试环境生效\nimport {devToolsEnhancer} from 'redux-devtools-extension/developmentOnly'\nlet store\n// 初始状态\nlet initialState = {}\n\n// redux 中间件\n//DOC todo 添加路由回溯 https://github.com/supasate/connected-react-router\nconst sagaMiddleware = createSagaMiddleware()\nconst middleware = [sagaMiddleware]\n// redux 增强\nconst enhancers = [devToolsEnhancer()]\n\nfunction getNewStore(middleware, enhancers) {\n    let newStore = createStore(\n        combineReducers({\n            ...syncReducers,\n        }),\n        initialState,\n        compose(\n            applyMiddleware(...middleware),\n            ...enhancers\n        )\n    )\n    enhancerStore(newStore)\n    return newStore\n}\n// store 增强器\nfunction enhancerStore(store) {\n    // 运行saga 并提供访问\n    store.rootSage = sagaMiddleware.run(getRootSagas())\n    // 添加关闭saga方法\n    store.closeSaga = () => {\n        store.dispatch(END)\n    }\n    // 储存reducers 与 asyncSagas\n    store.asyncReducers = {}\n    store.asyncSagas = {}\n\n    // 添加reducer方法\n    store.addReducer = (key, reducer, replace = true) => {\n        if (store.asyncReducers.hasOwnProperty(key)) return;\n        store.asyncReducers[key] = reducer;\n\n        // 避免 多次替换。\n        if (!replace) return\n        let newReducer = combineReducers({\n            ...syncReducers,\n            ...store.asyncReducers\n        })\n        store.replaceReducer(newReducer);\n    }\n\n    // 添加saga方法\n    store.addSaga = (key, saga) => {\n        key = `${key}Saga`\n\n        if (store.asyncSagas.hasOwnProperty(key)) return;\n\n        store.asyncSagas[key] = saga;\n\n        store.rootSage = sagaMiddleware.run(saga);\n    }\n}\n\n// Redux 组件\nconst Redux = ({children, restart = true}) => {\n    if (restart) {\n        store = getNewStore(middleware, enhancers)\n    }\n\n    return (\n        <Provider store={store}>\n            {children}\n        </Provider>\n    )\n}\n\nexport {\n    Redux,\n    store\n}","import React, {Component} from 'react'\nimport hoistNonReactStatic from 'hoist-non-react-statics'\nimport {store} from './index'\n\nfunction getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\n// 懒加载redux  ,每次页面加载的时候，才会加载当前页面的redux\nconst withLazyRedux = (dependence) => WrappedComponent => {\n    class ComponentWithLazyRedux extends Component {\n        constructor(props) {\n            super();\n            this.state = {\n                display: false,\n            }\n            this.dependence = dependence ? Object.entries(dependence) : []\n\n            const {length} = this.dependence\n\n            if (!length) return\n\n            if (!store) {\n                throw new Error(`Could not find \"store\".`)\n            }\n            this.dependence.forEach(([key, value], index) => {\n                let {reducer, saga} = value\n                let replace = false\n                if (index === length - 1) {\n                    replace = true\n                }\n                store.addReducer(key, reducer, replace)\n                store.addSaga(key, saga)\n            })\n            this.state.display = true\n        }\n\n        render() {\n            return this.state.display ? <WrappedComponent {...this.props} /> : null\n        }\n    }\n\n    ComponentWithLazyRedux.displayName = `withLazyRedux(${getDisplayName(WrappedComponent)})`\n    // 复制原组件上面的静态方法\n    hoistNonReactStatic(ComponentWithLazyRedux, WrappedComponent)\n    return ComponentWithLazyRedux\n}\n\nexport default withLazyRedux","export const ROUTE_HOME = '@@ROUTE_HOME'\nexport const INIT_HOME_DONE = '@@INIT_HOME_DONE'\n\n\n// 首页挂载\nexport function routeHome() {\n    return {\n        type: ROUTE_HOME\n    }\n}\n\n// 初始化首页完成\nexport function initHomeDone() {\n    return {\n        type: INIT_HOME_DONE\n    }\n}","import * as actions from \"./actions\";\n// 初始数据\nconst initialState = {\n    init: false,\n}\n\nexport default function reducers(state = initialState, action) {\n    switch (action.type) {\n        case actions.INIT_HOME_DONE:\n            return {\n                ...state,\n                init: true\n            }\n        default:\n            return state\n    }\n}\n\n\n\n// selectors\nexport function selectHomeInit({home: {init}}) {\n    return init\n}","import {put, call, take, all, fork, select} from 'redux-saga/effects'\n\n// api\nimport * as api from '../../../common/services'\nimport * as action from './actions'\nimport * as globalAction from \"../../App/model/actions\";\n\n// effectFunc\nimport {checkAppInit, checkRes} from '../../App/model/effects'\n\nimport {selectHomeInit} from \"./reducers\";\n/* ********** 页面流程 *********** */\n\n// 路由加载\nfunction* main() {\n    while (true) {\n        yield take(action.ROUTE_HOME)\n\n        // yield call(checkAppInit)\n\n        // 判断列表是否初始化\n        yield call(checkHomeInit)\n\n        yield call(loadHome)\n    }\n}\n\nexport function* checkHomeInit() {\n    const init = yield select(selectHomeInit)\n    if (!init) {\n        yield call(initHome)\n        yield put(action.initHomeDone())\n    }\n}\n\n// 初始化\nfunction* initHome() {\n    yield all([\n        // call(getBanner),\n    ])\n}\n\n// 每次加载\nfunction* loadHome() {\n    // yield call(getRecommend)\n}\n\n/* ******* watcher ******* */\nfunction* watchRegister() {\n    // 初始化监听\n    yield all([])\n}\n\n//\n// function* getBanner() {\n//     yield call(checkRes, {\n//         api: api.getBanner,\n//         success: (data) => put(action.receiveBanner(data)),\n//         failed: () => put(globalAction.putMessage('banner获取失败'))\n//     })\n// }\n\nexport default function* homeSaga() {\n    yield fork(main)\n    yield fork(watchRegister)\n}\n\n\n\n\n","import React, {PureComponent} from 'react';\nimport {connect} from 'react-redux'\n// import Swiper from 'react-id-swiper'\nimport {Helmet} from \"react-helmet\";\nimport './index.scss';\n// import {Link} from '../../common/router'\n\nimport lazyRedux from '../../common/redux/lazyRedux'\nimport saga from './model/effects'\nimport reducer from './model/reducers'\nimport {routeHome} from './model/actions'\nimport {showModal} from '../App/model/actions'\n\n\nconst mapState = (state) => ({\n    // banner: state.home.banner,\n})\n\nconst mapDispatch = {\n    routeHome,\n    showModal\n}\n\nconst mapDependence = {\n    'home': {\n        reducer,\n        saga\n    }\n}\n\n@lazyRedux(mapDependence)\n@connect(mapState, mapDispatch)\nclass Home extends PureComponent {\n    constructor(props) {\n        super();\n        const {routeHome} = props\n        routeHome()\n        this.state = {}\n    }\n\n\n    render() {\n        return <div className=\"page page-home\">\n            <Helmet>\n                <title>酒店</title>\n            </Helmet>\n            <div className=\"homePage\">\n                Hello,this is HomePage!\n            </div>\n            <div className=\"content\">\n                homeContent\n            </div>\n        </div>\n    }\n}\n\n\nexport default Home;\n\n","export const ROUTE_MEMBER = '@@ROUTE_MEMBER'\nexport const INIT_MEMBER_DONE = '@@INIT_MEMBER_DONE'\n\n\n// 首页挂载\nexport function routeMember() {\n    return {\n        type: ROUTE_MEMBER\n    }\n}\n\n// 初始化首页完成\nexport function initMemberDone() {\n    return {\n        type: INIT_MEMBER_DONE\n    }\n}","import * as actions from \"./actions\";\n// 初始数据\nconst initialState = {\n    init: false,\n}\n\nexport default function reducers(state = initialState, action) {\n    switch (action.type) {\n        case actions.INIT_MEMBER_DONE:\n            return {\n                ...state,\n                init: true\n            }\n        default:\n            return state\n    }\n}\n\n\n\n// selectors\nexport function selectMemberInit({member: {init}}) {\n    return init\n}","import {put, call, take, all, fork, select} from 'redux-saga/effects'\n// api\nimport * as api from '../../../common/services'\nimport * as action from './actions'\nimport * as globalAction from \"../../App/model/actions\";\n\n// effectFunc\nimport {checkAppInit, checkRes} from '../../App/model/effects'\nimport {selectMemberInit} from \"./reducers\";\n\n/* ********** 页面流程 *********** */\n\n// 路由加载\nfunction* main() {\n    while (true) {\n        yield take(action.ROUTE_MEMBER)\n        // yield call(checkAppInit)\n        // 判断列表是否初始化\n        yield call(checkMemberInit)\n        yield call(loadMember)\n    }\n}\n\nexport function* checkMemberInit() {\n    // console.log(\"1212112\")\n    const init = yield select(selectMemberInit)\n    // console.log(\"init...\",init)\n    if (!init) {\n        yield call(initMember)\n        yield put(action.initMemberDone())\n    }\n}\n\n// 初始化\nfunction* initMember() {\n    yield all([\n        // call(getBanner),\n    ])\n}\n\n// 每次加载\nfunction* loadMember() {\n    // yield call(getRecommend)\n}\n\n/* ******* watcher ******* */\nfunction* watchRegister() {\n    // 初始化监听\n    yield all([])\n}\n\n//\n// function* getBanner() {\n//     yield call(checkRes, {\n//         api: api.getBanner,\n//         success: (data) => put(action.receiveBanner(data)),\n//         failed: () => put(globalAction.putMessage('banner获取失败'))\n//     })\n// }\n\nexport default function* memberSaga() {\n    yield fork(main)\n    yield fork(watchRegister)\n}\n\n\n\n\n","import React, {PureComponent} from 'react';\nimport {connect} from 'react-redux'\n// import Swiper from 'react-id-swiper'\nimport {Helmet} from \"react-helmet\";\nimport './index.scss';\n// import {Link} from '../../common/router'\n\nimport lazyRedux from '../../common/redux/lazyRedux'\nimport saga from './model/effects'\nimport reducer from './model/reducers'\nimport {routeMember} from './model/actions'\nimport {showModal} from '../App/model/actions'\n\n\nconst mapState = (state) => ({\n    // banner: state.home.banner,\n})\n\nconst mapDispatch = {\n    routeMember,\n    showModal\n}\n\nconst mapDependence = {\n    'member': {\n        reducer,\n        saga\n    }\n}\n\n@lazyRedux(mapDependence)\n@connect(mapState, mapDispatch)\nclass Member extends PureComponent {\n    constructor(props) {\n        super();\n        const {routeMember} = props\n        routeMember()\n        this.state = {}\n    }\n    render() {\n        return <div className=\"homePage\">\n            <Helmet>\n                <title>会员中心</title>\n            </Helmet>\n            <div className=\"content\">\n                this is memberPage!\n            </div>\n        </div>\n    }\n}\n\n\nexport default Member;\n\n","import React from 'react';\nimport {Router as OriginalRouter, Link as RouterLink, Route} from 'react-router-dom'\nimport {\n    createHashHistory,\n    createBrowserHistory,\n    createMemoryHistory\n} from 'history'\n\nimport {isWeixin, isMiniProgramPromise} from '../utils/env'\nimport {navigateToMiniProgram, navigateToMiniProgramWebview} from '../utils/navigateToMiniProgram'\n\n// 路由列表\nimport {routes} from './routes'\n\nlet history, routeTree = {}\n\n//TODO: DOC　 路由书调整\nwindow.routeTree = routeTree\n\nexport const RouteList = ({routes, base = ''}) => {\n    return Reflect.ownKeys(routes).map((routePath) => {\n        // console.log(\"routePath...\",routePath)\n        let {component, exact, routes: subRoutes} = routes[routePath]\n\n        routeTree[routePath] = 'component'\n        let path = base + routePath\n\n        if (!component && subRoutes) {\n            return (\n                <Route\n                    key={path}\n                    exact={exact}\n                    path={path}\n                    children={<RouteList base={path} routes={subRoutes}/>}\n                />\n            )\n        } else {\n            return (\n                <Route\n                    key={path}\n                    exact={exact}\n                    path={path}\n                    component={component}\n                />\n            )\n        }\n    })\n}\n\n// 自定义路由组件\nconst Router = (props) => {\n    const {children, mode, location} = props\n    let Root = (<RouteList routes={routes}/>)\n    if (children && React.isValidElement(children)) {\n        Root = React.cloneElement(children, {\n            children: <RouteList routes={routes}/>\n        })\n    }\n\n    if (mode === 'static') {\n        history = createMemoryHistory({\n            initialEntries: [location]\n        })\n    } else if (mode === 'browser') {\n        history = createBrowserHistory();\n    } else {\n        history = createHashHistory();\n    }\n\n    enhancerHistory(history)\n\n    return (\n        <OriginalRouter history={history}>\n            {Root}\n        </OriginalRouter>\n    )\n}\n\n// 增加history的功能\nfunction enhancerHistory(history) {\n    const initPathname = history.location.pathname\n    let list = history.list = [initPathname]\n    history.listen((location, action) => {\n        // console.log(\"location...\", location, \"action....\", action)\n        // console.log('location...',location)\n        // console.log('action...',action)\n        let {pathname} = location\n        let {length} = list\n        // 路由相同 返回\n        if (pathname === list[list.length - 1]) return\n\n        if (action === 'PUSH') {\n            list.push(pathname)\n        } else if (action === 'REPLACE') {\n            list[length - 1] = pathname\n        } else if (action === 'POP') {\n            let prevPathname = list[length - 2]\n            if (prevPathname === pathname) {\n                // 后退\n                list.pop()\n            } else {\n                // 前进\n                list.push(pathname)\n            }\n        }\n    });\n    // 回退所有当前页面内跳转的路由并打开目标页\n    history.reLaunch = function reLaunch(path, state) {\n\n        let shouldBlack = -list.length + 1\n\n        if (shouldBlack < 0) history.go(shouldBlack)\n\n        list = history.list = [initPathname]\n\n        if (path !== initPathname) {\n            setTimeout(() => {\n                history.replace(path, state)\n            }, 0)\n        }\n    }\n}\n\n\n// 实现 Link组件 方便后期切换路由方案\nconst Link = (props) => {\n    const {to, children, reLaunch, onClick, className} = props\n    if (/http(s)?:\\/{2}|hanting(s)?:\\/{2}/.test(to)) {\n        // 站外跳转\n        return (\n            <a href={to} className={className} onClick={(e) => {\n                // 阻止默认跳转\n                e.preventDefault()\n                onClick && onClick()\n                // 非微信\n                if (!isWeixin) {\n                    window.location.href = to\n                    return\n                }\n                // 微信内\n                isMiniProgramPromise.then((is) => {\n                    if (is) {\n                        // 是小程序则走小程序跳转\n                        navigateToMiniProgramWebview(to)\n                    } else {\n                        // 不是则直接跳转\n                        window.location.href = to\n                    }\n                })\n            }}>{children}</a>\n        )\n    } else if (/\\/pages\\//.test(to)) {\n        return <a href={to} className={className} onClick={(e) => {\n            // 阻止默认跳转\n            e.preventDefault()\n            onClick && onClick()\n            navigateToMiniProgram({\n                url: to\n            })\n        }}>{children}</a>\n\n    } else if (reLaunch) {\n        // 站内reLaunch跳转\n        return (\n            <a href={to} onClick={(e) => {\n                // 阻止默认跳转\n                e.preventDefault()\n                history.reLaunch(to)\n            }}>{children}</a>\n        )\n    }\n    return <RouterLink {...props}/>\n}\n\nexport {\n    Router,\n    history,\n    routeTree,\n    Link\n}","import Home from '../../pages/Home'\nimport Member from '../../pages/Member'\nexport const routes = {\n    '/': {\n        component: Home,\n        exact: true\n    },\n    '/member': {\n        component: Member,\n        exact: true\n    },\n}","import React, {PureComponent} from 'react';\nimport './Loading.scss'\n\n// 提供延迟显示组件的高阶函数 常用于loading的防止闪烁\n\n// widthDelayComponent\nexport const widthDelayComponent = (defaultDelay = 200) => WrappedComponent => {\n\n    class ComponentWidthDelay extends PureComponent {\n        constructor({delay = false}) {\n            super()\n\n            this.state = {\n                show: true,\n                delay\n            }\n\n            this.timer = null\n        }\n\n        componentDidMount() {\n            const {delay, time = defaultDelay} = this.props\n            if (delay) {\n                this.timer = setTimeout(() => {\n                    this.setState({\n                        delay: false\n                    })\n                }, time)\n            }\n        }\n\n        componentWillUnmount() {\n            clearTimeout(this.timer)\n        }\n\n        render() {\n            const {show, delay} = this.state\n\n            return !show || delay ? null : <WrappedComponent {...this.props}/>\n        }\n    }\n\n    ComponentWidthDelay.displayName = `widthDelay(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`\n\n    return ComponentWidthDelay\n}\n\n@widthDelayComponent()\nclass Loading extends PureComponent {\n    render() {\n        return (\n            <div className=\"loading\">\n                <div className=\"loading-icon\"/>\n            </div>\n        );\n    }\n}\n\nexport default Loading\n\n\n","import React, {PureComponent} from 'react';\nimport {Helmet} from \"react-helmet\";\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\n//全局样式\nimport './index.scss';\n// loading 组件\nimport Loading from '../../common/components/Loading'\nimport {hideModal,} from './model/actions'\n\nconst mapState = (state) => {\n    return {\n        showToast: state.app.showToast,\n        showLoading: state.app.showLoading,\n        showModalEl: state.app.showModalEl,\n        toastMsg: state.app.toastMsg,\n        modalMsg: state.app.modalMsg,\n        showModalToast: state.app.showModalToast,\n    }\n}\n\nconst mapDispatch = {\n    hideModal,\n}\n@withRouter\n@connect(mapState, mapDispatch)\nclass App extends PureComponent {\n    constructor(props) {\n        super()\n        // console.log(\"proops...\",props)\n    }\n\n    // 底部tabbar\n    renderNavbar() {\n        const {location: {pathname}, history} = this.props\n        // console.log(\"proops...\",this.props)\n        // console.log(\"pathname....\",pathname)\n        const needNavbarList = ['/', '/member',]\n        let showNavBar = needNavbarList.indexOf(pathname) !== -1\n        return (\n            <div className={'navbar' + (showNavBar ? ' show' : '')}>\n                <div\n                    className={'item tohome' + (pathname === '/' ? ' active' : '')}\n                    onClick={() => {\n                        if (pathname !== '/') {\n                            history.replace('/')\n                        }\n                    }}\n                >\n                    酒店\n                </div>\n                <div className=\"line\"/>\n                <div className={'item totask' + ((pathname.split('/')[1] === 'member') ? ' active' : '')}\n                     onClick={() => {\n                         if ((pathname.split('/')[1] !== 'member')) {\n                             history.replace('/member')\n                         }\n                     }}\n                >\n                    会员\n                </div>\n                <div className=\"line\"/>\n                <div className={'item tolog' + (pathname === '/' ? ' active' : '')}\n                     onClick={() => {\n                         if (pathname !== '/') {\n                             history.replace('/')\n                         }\n                     }}\n                >\n                    我的\n                </div>\n            </div>\n        )\n    }\n\n    // 全局toast\n    renderToast() {\n        const {showToast, toastMsg} = this.props\n        return (\n            <div className={'toast' + (showToast ? ' show' : '')}>{toastMsg}</div>\n        )\n    }\n\n    // 全局modal\n    renderModal() {\n        const {showModalEl, modalMsg, hideModal} = this.props\n        return (\n            <div className={'modal' + (showModalEl ? ' show' : '')}>\n                <div className='mask' onClick={() => {\n                    hideModal()\n                }}/>\n                <div className='modalInner'>{modalMsg}</div>\n            </div>\n        )\n    }\n\n    ShowModalToast = () => {\n        let {showModalToast} = this.props;\n        return showModalToast\n            ? <div>\n                <div className=\"commit-status\">\n                    <div className=\"icon\"></div>\n                    <span>复制成功</span>\n                </div>\n            </div>\n            : null\n    }\n\n    render() {\n        const {showLoading} = this.props\n        return (\n            <div className=\"app\">\n                <Helmet>\n                    <title>指北生活</title>\n                </Helmet>\n                {this.props.children}\n                {this.renderToast()}\n                {this.renderModal()}\n                {this.renderNavbar()}\n                {this.ShowModalToast()}\n                {showLoading && <Loading delay={true}/>}\n            </div>\n        );\n    }\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport {render,} from 'react-dom';\nimport {Redux} from './common/redux'\nimport {Router} from './common/router'\n\nimport App from './pages/App/index'\n\nconst Root = (\n    <Redux>\n        <Router mode='hash'>\n           <App/>\n        </Router>\n    </Redux>\n)\n\nrender(Root, document.getElementById('root'))\n"],"sourceRoot":""}